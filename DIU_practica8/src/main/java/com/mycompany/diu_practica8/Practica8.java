/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.diu_practica8;

import java.awt.Point;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.opencv.core.Core;
import org.opencv.core.CvType;
import org.opencv.core.Mat;
import org.opencv.highgui.HighGui;
import org.opencv.imgcodecs.Imgcodecs;
import org.opencv.imgproc.Imgproc;


/**
 *
 * @author Víctor y Xavi
 */
public class Practica8 extends javax.swing.JFrame {

        static{
            nu.pattern.OpenCV.loadShared();
        }
        static{
            System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
        }
        
        JFileChooser fc = new JFileChooser();
        FileNameExtensionFilter filtro = null;
        File fichero = null;
    public Practica8() {
        initComponents();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        escritorio = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        abrir = new javax.swing.JMenuItem();
        cerrar = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        Salir = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        umbralizar = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        informacion = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout escritorioLayout = new javax.swing.GroupLayout(escritorio);
        escritorio.setLayout(escritorioLayout);
        escritorioLayout.setHorizontalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1006, Short.MAX_VALUE)
        );
        escritorioLayout.setVerticalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 540, Short.MAX_VALUE)
        );

        jMenu1.setText("File");

        abrir.setText("Abrir");
        abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirActionPerformed(evt);
            }
        });
        jMenu1.add(abrir);

        cerrar.setText("Cerrar ventanas");
        cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarActionPerformed(evt);
            }
        });
        jMenu1.add(cerrar);
        jMenu1.add(jSeparator1);

        Salir.setText("Salir");
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });
        jMenu1.add(Salir);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        umbralizar.setText("Umbralizar");
        umbralizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                umbralizarActionPerformed(evt);
            }
        });
        jMenu2.add(umbralizar);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Help");

        informacion.setText("About");
        informacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                informacionActionPerformed(evt);
            }
        });
        jMenu3.add(informacion);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(escritorio)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(escritorio)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirActionPerformed
        filtro = new FileNameExtensionFilter("Imágenes", "jpg", "jpeg", "png");
        fc.addChoosableFileFilter(filtro);
        int op = fc.showOpenDialog(null);
        if (op == JFileChooser.APPROVE_OPTION) {
            fichero = fc.getSelectedFile();
            cerrarVentanas();
            try {
                BufferedImage imagen = ImageIO.read(fichero);
                Ventana ventanaInterna = new Ventana(imagen);
                ventanaInterna.setTitle(fichero.getName());
                ventanaInterna.setLocation(new Point(0,50));
                escritorio.add(ventanaInterna);
            } catch (IOException ex) {
                Logger.getLogger(Practica8.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_abrirActionPerformed

    private void umbralizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_umbralizarActionPerformed
        String input = JOptionPane.showInputDialog("Inserte el factor de umbral: ");
        Mat imgO = Imgcodecs.imread(fichero.getAbsolutePath());
        if(inputIsValido(input)){
            Mat imgU = umbralizar(imgO, Integer.parseInt(input));
            BufferedImage imgUm = (BufferedImage) HighGui.toBufferedImage(imgU);
            Ventana ventanaU = new Ventana(imgUm);
            ventanaU.setTitle(input);
            ventanaU.setLocation(new Point(this.getWidth()-ventanaU.getWidth()-10, (int)(Math.random()*(this.getHeight()-ventanaU.getHeight()))));
            escritorio.add(ventanaU);
        } else {
            JOptionPane.showMessageDialog(rootPane, "ERROR: Tiene que haber una imagen abierta para poder umbralizar", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_umbralizarActionPerformed

    private void informacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_informacionActionPerformed
         JOptionPane.showMessageDialog(rootPane, "Ayuda:\n"
                + "1. Haga clic en File/Abrir para seleccionar la imagen\n"
                + "2. Haciendo clic en Edit/Umbralizar le aparecerá un diálogo solicitando el factor para el umbral:\n"
                + "   - Debe ser Entero.\n"
                + "   - Puede umbralizarse cuantas veces se quiera.\n"
                + "3. Por cada umbralizado aparecerá una nueva ventana con el nuevo factor de umbral.\n"
                + "4. Para cerrar la aplicación, haga click en File/Exit");
    }//GEN-LAST:event_informacionActionPerformed

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
         System.out.println("SALIR");
        int res = JOptionPane.showConfirmDialog(rootPane, "¿Desea salir de la aplicación?", "Confirmación de Salir", JOptionPane.YES_NO_OPTION,JOptionPane.CLOSED_OPTION);
        if(res==0){
            this.setVisible(false);
        }
    }//GEN-LAST:event_SalirActionPerformed

    private void cerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarActionPerformed
        cerrarVentanas();
    }//GEN-LAST:event_cerrarActionPerformed

    /**
     * @param args the command line arguments
     */
    
    private boolean inputIsValido(String input) {
        try {
            int parseInt = Integer.parseInt(input);
            return true;
        } catch (NumberFormatException e){
            return false;
        }
    }
    
     private Mat umbralizar(Mat imagen_original, Integer umbral) {
// crear dos imágenes en niveles de gris con el mismo
// tamaño que la original
        Mat imagenGris = new Mat(imagen_original.rows(),
                imagen_original.cols(),
                CvType.CV_8U);
        Mat imagenUmbralizada = new Mat(imagen_original.rows(),
                imagen_original.cols(),
                CvType.CV_8U);
// convierte a niveles de grises la imagen original
        Imgproc.cvtColor(imagen_original,
                imagenGris,
                Imgproc.COLOR_BGR2GRAY);
// umbraliza la imagen:
// - píxeles con nivel de gris > umbral se ponen a 1
// - píxeles con nivel de gris <= umbra se ponen a 0
        Imgproc.threshold(imagenGris,
                imagenUmbralizada,
                umbral,
                255,
                Imgproc.THRESH_BINARY);
// se devuelve la imagen umbralizada
        return imagenUmbralizada;
    }
     
     private void cerrarVentanas() {
        JInternalFrame[] internalFrames = escritorio.getAllFrames();
        for (JInternalFrame internalFrame : internalFrames) {
            internalFrame.dispose();
        }
    }
     

        
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Practica8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Practica8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Practica8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Practica8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Practica8().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Salir;
    private javax.swing.JMenuItem abrir;
    private javax.swing.JMenuItem cerrar;
    private javax.swing.JDesktopPane escritorio;
    private javax.swing.JMenuItem informacion;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenuItem umbralizar;
    // End of variables declaration//GEN-END:variables
}
